 数组是什么? 在内存在占用连续内存 保存数据的集合
 数组的创建
     1.var arr=[];  //数组字面量(直接量)
     2.用构造器(构造函数)创建数组
	 构造器创建函数时 如果小括号中的值为 单个数值时 则被视为数组长度

 数组元素的读(获取) 写(设置)
     var arr=['a',null,undefined];*/
     console.log(arr[0]);//'a'
     console.log(arr[arr.length-1]);//undefined
 清空数组  .length=0;
 删除数组中的最后一个元素  .length-=1;

 数组的遍历
	var arr=['abc',345,456,'x',undefined];
	正序遍历数组
	for(var i=0; i<arr.length; i++){
		console.log(arr[i]);
		 }
	倒叙遍历数组
	for(var i=arr.length-1; i>=0 ; i--){
		console.log(arr[i]);
		 }
 instanceof 检测类型
 转换方法
     字符串转数组 ==> 字符串.split(分隔符);
	 1.如果 小括号中 没有参数,则默认该字符串为一个数组项
	 2.如果 小括号中 参数为空字符串 则字符串中的每个字符 都是一个数组项
	 3.如果 小括号中 参数为 字符串中 不存在的字符 则默认该字符串为一个数组项
	 4.如果 小括号中 参数为字符串中的某个字符 则该字符变为逗号,逗号与逗号之间如果没有内容 
           则默认为 空字符串,如果该字符为前置或后缀字符,则前置字符前和后缀字符后需添加空字符串
     数组转字符串   join(连接符);
 栈方法  ==>会改变原数组
     push(添加项1,添加项2....) 在队尾添加一个或多个项,返回值为新数组长度
     pop()==> 在队尾删除一个项,返回值为被删除的项
 队方法  ==>会改变原数组
     unshift(添加项1,添加项2....) 在队头添加一个或多个项 返回值为 新数组长度
     shift()==>在队头删除一个项,返回值为被删除的项
 重排序方法 ==>会改变原数组
     reverse() 数组翻转
     sort() 数组排序==>默认按照 数组项的ASCII值排序 从小到大
          console.log(arr.sort(function(x,y){
		//return x-y; //第一个参数减第二个参数 升序排序
		return y-x;   //第二个参数减第一个参数 降序排序
	});
 操作方法
     数组.concat(拼接项1,拼接项2...) 数组拼接(拼接常量) 返回值为:拼接会的数组
     数组.slice() 数组截取
     数组.splice(起始下标,删除个数,添加项1,添加项2...) 会改变原数组
         返回值为被删除项组成的数组
         数组的增删改方法
     字符串.replace(被替换项,替换项); //将被替换项首次出现的位置 替换成 替换项





