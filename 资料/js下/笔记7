1、递归
    函数调用函数自身,最终要有一个停止的条件
    arguments.callee是一个指向正在执行的函数的指针
    严格模式下("use strict")不能访问arguments.callee
    可以使用：
    var factorial = function f(num){
            if(num<=1){
                return 1;
            }else{
                return num*f(num-1);
            }
     }
2、自执行函数
    模仿块级作用域
3、闭包：
    有权访问另一个函数作用域中的变量的函数，函数嵌套函数,子函数要使用到父函数局部变量   
    什么是闭包？
    特点：
        1）函数嵌套函数2）内部函数可以访问外部函数的变量3）参数和变量不会被回收。
    闭包的用途就是可以读取函数内部的变量，让这些变量的值始终保持在内存中
    闭包会影响浏览器的反应速度境地用户体验或造成浏览器无响应
    闭包有可能造成内存泄漏


